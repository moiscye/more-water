type Product
  @model
  @auth(
    rules: [
      # allow admins to create, update and delete products
      { allow: groups, groups: ["admin"] }
      # allow all authenticated users to view products
      { allow: private, operations: [read] }
      # allow all guest users (not authenticated) to view products
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  name: String!
  description: String!
  price: Float!
  categoryId: ID!
  category: Category @connection(fields: ["categoryId"])
  owner: String
  createdAt: String
}
type Category
  @model
  @auth(
    rules: [
      # allow admins to create, update and delete categories
      { allow: groups, groups: ["admin"] }
      # allow all authenticated users to view categories
      { allow: private, operations: [read] }
      # allow all guest users (not authenticated) to view categories
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  name: String!
  createdAt: String
}

type User
  @model(
    queries: { get: "getUser" }
    mutations: { create: "registerUser", update: "updateUser" }
    subscriptions: null
  )
  @auth(
    rules: [
      # allow admins to create, update and delete users
      { allow: groups, groups: ["admin"] }
      # allow all authenticated users to create and view users
      { allow: private, operations: [create, read] }
      # allow all guest users (not authenticated) to create users
      { allow: public, operations: [create], provider: iam }
    ]
  ) {
  id: ID!
  email: String!
  fullName: String!
  phoneNumber: String
  address: String
  orders: [Order] @connection(name: "UserOrders", sortField: "createdAt")
}

type Order
  @model(
    queries: null
    mutations: { create: "createOrder" }
    subscriptions: null
  )
  @auth(
    rules: [
      # allow admins to create, update and delete orders
      { allow: groups, groups: ["admin"] }
      # allow all authenticated users to view orders
      { allow: private, operations: [create, read] }
      # allow all guest users (not authenticated) to view orders
      { allow: public, operations: [create], provider: iam }
    ]
  ) {
  id: ID!
  product: [Product] @connection
  user: User @connection(name: "UserOrders")
  address: String
  deliveryInstructions: String
  deliveryDate: String
  updatedAt: String
  createdAt: String
  orderNumber: Int
}

type Contact
  @model
  @auth(
    rules: [
      # allow admins to create, update and delete orders
      { allow: groups, groups: ["admin"] }
      # allow all authenticated users to view orders
      { allow: private, operations: [create, read] }
      # allow all guest users (not authenticated) to view orders
      { allow: public, operations: [create], provider: iam }
    ]
  ) {
  id: ID!
  email: String!
  fullName: String!
  phoneNumber: String!
  subject: String!
  message: String!
}
